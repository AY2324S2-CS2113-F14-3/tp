@startuml SequenceDiagram
skinparam classAttributeIconSize 0
skinparam style strictuml

participant ":WeeklyProgramManager"

activate ":WeeklyProgramManager"
    ":WeeklyProgramManager" -> ":WeeklyProgramManager" : executeLogAction
    activate ":WeeklyProgramManager"
    ":WeeklyProgramManager" -> ":WorkoutLogsManager" : addWorkoutLog(workoutDate, workoutName)
    activate ":WorkoutLogsManager"
    create ":WorkoutLog" as WorkoutLog
    ":WorkoutLogsManager" -> WorkoutLog : new(workoutDate, workoutName)
    activate WorkoutLog
    WorkoutLog --> ":WorkoutLogsManager" : return newWorkoutLog
    deactivate WorkoutLog
    ":WorkoutLogsManager" -> ":WorkoutLogsManager" : add(newWorkoutLog)
    activate ":WorkoutLogsManager"
    ":WorkoutLogsManager" --> ":WorkoutLogsManager"
    deactivate ":WorkoutLogsManager"
    ":WorkoutLogsManager" --> ":WeeklyProgramManager"
    deactivate ":WorkoutLogsManager"
    ":WeeklyProgramManager" -> ":WorkoutLogsManager" : addExerciseLog(workoutDate, exerciseName, weight, sets, repetition)
    activate ":WorkoutLogsManager"
    create ":ExerciseLog" as ExerciseLog
    ":WorkoutLogsManager" -> ExerciseLog : new(exerciseName, weightsList, setsInt, repsList)
    activate ExerciseLog
    ExerciseLog --> ":WorkoutLogsManager" : return newExerciseLog
    deactivate ExerciseLog
    ":WorkoutLogsManager" -> ":WorkoutLogsManager" : retrieve(workoutLogDate)
    activate ":WorkoutLogsManager"
    ":WorkoutLogsManager" --> ":WorkoutLogsManager": workoutLog
    deactivate ":WorkoutLogsManager"
    ":WorkoutLogsManager" -> WorkoutLog : addExerciseLog(newExerciseLog)
    activate WorkoutLog
    WorkoutLog --> ":WorkoutLogsManager"
    deactivate WorkoutLog
    ":WorkoutLogsManager" --> ":WeeklyProgramManager"
    deactivate ":WorkoutLogsManager"
    ":WeeklyProgramManager" --> ":WeeklyProgramManager": messageToUser
    deactivate ":WeeklyProgramManager"
@enduml
